// const gulp = require('gulp');
// const $ = require('gulp-load-plugins')();
// const requireDir = require("require-dir");
// const runSequence = require('run-sequence');
// const browserSync = require('browser-sync');
// const fs = require('fs-extra');
// const Docs = require('./index');


// // requireDir("./gulp_task", { recurse: true });





// // const settings = {

// //   // 生成したドキュメントを出力する場所
// //   docOutputPath: './docs/dest',

// //   // ドキュメントのリストデータを出力する場所
// //   indexOutputPath: './docs/dest/_index',

// //   // テンプレートファイルの場所
// //   templatePath: './docs/theme/default',

// //   /**
// //    * グルーピング関連
// //    */
// //   // ドキュメントのグルーピングデータを出力する場所
// //   groupIndexOutputPath: './docs/dest/_group',

// //   // グルーピングで自動生成したページファイルを一時出力する場所
// //   groupDocOutputPath: './docs/__temp/group_doc',

// //   // グルーピングするキーワード
// //   groupingKeys: [
// //     {
// //       id: 'category',
// //       title: 'CATEGORY'
// //     },
// //     {
// //       id: 'tags',
// //       title: 'TAGS'
// //     }
// //   ],

// //   // グルーピング用画面に適用するテンプレート
// //   groupTemplateFile: 'post.html',

// //   pages: {
// //     blog: {
// //       title: 'BLOG',
// //       href: '/blog/index.html',
// //       templateFile: 'post.html',
// //       src: [
// //         './docs/src/**/blog/**/*.md'
// //       ],
// //       indexing: true,
// //       noIndexingHref: [
// //         '/blog/index.html'
// //       ]
// //     },

// //     profile: {
// //       title: 'PROFILE',
// //       href: '/profile/index.html',
// //       templateFile: 'page.html',
// //       src: [
// //         './docs/src/**/profile/**/*.md'
// //       ],
// //       indexing: true,
// //       noIndexingHref: [
// //         '/profile/index.html'
// //       ]
// //     },


// //     page: {
// //       title: '',
// //       templateFile: 'page.html',
// //       src: [
// //         './docs/src/*.md',
// //         './docs/src/**/blog/index.md',
// //         './docs/src/**/profile/index.md'
// //       ],
// //       indexingOnlyHref: [
// //         '/blog/index.html',
// //         '/profile/index.html'
// //       ],
// //       indexing: true
// //     }
// //   }
// // };

// // Object.keys(settings.groupingKeys).forEach(key => {
// //   settings.pages[key] = {
// //     templateFile: settings.groupTemplateFile,
// //     src: [settings.groupDocOutputPath + '/**/*.md'],
// //     indexing: false
// //   }
// // });


// // const indexPages = Object.keys(settings.pages).filter(pageId => {
// //   const page = settings.pages[pageId];
// //   return page.indexing;
// // });





// const getSettings = (params) => {

//   const defaults = {

//     // 生成したドキュメントを出力する場所
//     docOutputPath: '/dest',

//     // ドキュメントのリストデータを出力する場所
//     indexOutputPath: '/dest/_index',

//     // テンプレートファイルの場所
//     templatePath: '/theme/default',

//     // ドキュメントのグルーピングデータを出力する場所
//     groupIndexOutputPath: '/dest/_group',

//     // グルーピングで自動生成したページファイルを一時出力する場所
//     groupDocOutputPath: '/__temp/group_doc',

//     // グルーピングするキーワード
//     groupingKeys: [],

//     // グルーピング用画面に適用するテンプレート
//     groupTemplateFile: 'post.html',

//     indexPages: []

//   }

//   const settings = Object.assign({}, defaults);

//   // PATH関連にrootPathを追加
//   if( params.rootPath ){
//     [
//       'docOutputPath',
//       'indexOutputPath',
//       'templatePath',
//       'groupIndexOutputPath',
//       'groupDocOutputPath',
//     ].forEach( name => {
//       settings[name] = params.rootPath + defaults[name];
//     })
//   }

//   Object.assign(settings, params);

//   const pageDefaults = {
//     title: '',
//     href: '/__pageId__/index.html',
//     templateFile: 'page.html',
//     src: '/src/**/__pageId__/**/*.md',
//     indexing: true,
//     noIndexingHref: '/__pageId__/index.html'
//   };

//   if( params.pages ){
//     const pages = {};
//     Object.keys(params.pages).forEach((key) => {
//       const page = params.pages[key];
//       const pageSettings = Object.assign({}, pageDefaults, page);

//       if( page.isBlog ) pageSettings.templateFile = 'post.html';
//       [
//         'href',
//         'src',
//         'noIndexingHref'
//       ].forEach( name => {
//         pageSettings[name] = pageSettings[name].replace('__pageId__', key);
//         if( name === 'src') pageSettings[name] = params.rootPath + pageSettings[name];
//         if( /^(src|noIndexingHref)$/.test(name) ){
//           pageSettings[name] = [pageSettings[name]];
//         }
//       })

//       pages[key] = pageSettings;
//     });
//     settings.pages = pages;
//   }

//   settings.pages = settings.pages || {};

//   const page = settings.pages.page = Object.assign({}, pageDefaults, {
//     src: [
//       params.rootPath + '/src/*.md',
//     ],
//     indexingOnlyHref: [],
//     href: '',
//     noIndexingHref: ''
//   });
//   Object.keys(params.pages).forEach((key) => {
//     page.src.push(params.rootPath + '/src/**/' + key + '/index.md');
//     page.indexingOnlyHref.push('/' + key + '/index.html');
//   });

//   Object.keys(settings.groupingKeys).forEach(key => {
//     settings.pages[key] = {
//       templateFile: settings.groupTemplateFile,
//       src: [settings.groupDocOutputPath + '/**/*.md'],
//       indexing: false
//     }
//   });

//   settings.indexPages = Object.keys(settings.pages).filter(pageId => {
//     const page = settings.pages[pageId];
//     return page.indexing;
//   });

//   return settings;

// }


// const params = {

//   // ルートPATH
//   rootPath: './docs',

//   // グルーピングするキーワード
//   groupingKeys: [
//     { id: 'category', title: 'CATEGORY'},
//     { id: 'tags',     title: 'TAGS'}
//   ],

//   // ページ設定
//   pages: {
//     blog: {
//       isBlog: true,
//       title: 'BLOG',
//     },
//     profile: {
//       title: 'PROFILE',
//     }
//   }
// }

// const settings = getSettings(params);
// console.log('settings',settings)
// console.log(settings.pages.blog.noIndexingHref)


// // require('./gulp_task/task')(settings);




// const indexingTaskName = 'docs:indexing';
// const indexingTasks = [];
// Object.keys(settings.pages).forEach(pageId => {
//   const page = settings.pages[pageId];
//   if( !page.indexing ) return;

//   // const docs = new Docs();
//   const taskName = indexingTaskName + ':' + pageId;
//   indexingTasks.push(taskName);
//   gulp.task(taskName, cb => {
//     return gulp.src(page.src).
//       pipe($.rename({extname: '.html'})).
//       pipe(Docs.indexing({
//         pageId: pageId,
//         pageTitle: page.title,
//         pageHref: page.href,

//         indexDest: settings.indexOutputPath,
//         noIndexingHref: page.noIndexingHref,


//         groupingKeys: settings.groupingKeys,
//         groupIndexDest: settings.groupIndexOutputPath,
//         groupDocDest: settings.groupDocOutputPath,

//         docDest: settings.docOutputPath

//       }))
//     ;
//   });
// });
// gulp.task(indexingTaskName, indexingTasks);




// const renderTaskName = 'docs:render';
// const renderTasks = [];
// Object.keys(settings.pages).forEach(pageId => {
//   const page = settings.pages[pageId];

// const cond = (file) => {

//   if( !page.indexingOnlyHref ) return true;

//   const href = '/' + file.path.split(file.base)[1];


//   return !(page.indexingOnlyHref.some(v => v === href));
// };



//   // const docs = new Docs();
//   const taskName = renderTaskName + ':' + pageId;
//   renderTasks.push(taskName);
//   gulp.task(taskName, cb => {
//     return gulp.src(page.src).
//       pipe($.rename({extname: '.html'})).
//       pipe(Docs.render({
//         templateFile: page.templateFile,
//         templatePath: settings.templatePath,
//         indexPath: settings.indexOutputPath,
//         indexPages: settings.indexPages,

// indexingOnlyHref: page.indexingOnlyHref,
// indexing: page.indexing,


//         pageId: pageId,
//         pageTitle: page.title,
//         pageHref: page.href,


//         groupingKeys: settings.groupingKeys,
//         groupIndexDest: settings.groupIndexOutputPath,
//       })).
//       // pipe(gulp.dest(settings.docOutputPath))
//       pipe($.if(cond, gulp.dest(settings.docOutputPath)))
//     ;
//   });
// });
// gulp.task(renderTaskName, renderTasks);


// const buildTaskName = 'docs:build';
// gulp.task(buildTaskName, cb => {
//   runSequence('docs:cleanDest',indexingTaskName, renderTaskName, cb);
// });



// gulp.task(
//   'docs:serve', () => {
//     browserSync({
//       server: {
//         baseDir: settings.docOutputPath
//       }
//     });
//   }
// );

// gulp.task(
//   'default',
//   function (cb) {
//     runSequence('docs:cleanDest',buildTaskName, 'docs:serve', cb);
//   }
// );

// gulp.task(
//   'docs:cleanDest',
//   function (cb) {
//     fs.removeSync( settings.docOutputPath );
//     fs.removeSync( settings.groupDocOutputPath );
//     cb();
//   }
// );
